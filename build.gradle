buildscript {
    ext.kotlin_version = '1.2.50'
    ext.fuel_version = '1.12.1'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC7-2'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'net.researchgate.release' version '2.6.0'
}

group 'io.honeycomb'

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply from: 'gradle/integration-tests.gradle'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.beust:klaxon:3.0.1'
    compile "com.github.kittinunf.fuel:fuel:$fuel_version"
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'io.github.microutils:kotlin-logging:1.5.4'
    testCompile 'junit:junit:4.12'
    testCompile 'org.awaitility:awaitility:3.1.0'
    testCompile 'com.google.guava:guava:25.1-jre'
    testCompile 'org.assertj:assertj-core:3.9.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    exclude '**/*IntegrationTest.class'
}

detekt {
    version = "1.0.0.RC7-2"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        output = "$buildDir/reports"
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/imavroukakis/libhoney-kotlin.git'
        version {
            name = project.version
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: project.classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: project.javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.bintray.pkg.name
            from components.java

            artifact sourcesJar {
                classifier = 'sources'
            }
            artifact javadocJar {
                classifier = 'javadoc'
            }
        }
    }
}

jacocoTestReport {
    reports {
        html.enabled = false
        xml.enabled = false
        csv.enabled = false
    }
}

task jacocoMerge(type: JacocoMerge) {
    dependsOn jacocoTestReport
    executionData test, integrationTest
}

task coverageReport(type: JacocoReport) {
    executionData jacocoMerge.destinationFile
    dependsOn jacocoTestReport, jacocoMerge
    reports {
        html.enabled = true
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
        csv.enabled = false
    }
    sourceDirectories = files(sourceSets.main.kotlin.srcDirs)
    classDirectories = files(sourceSets.main.output.classesDirs)
}

afterReleaseBuild.dependsOn bintrayUpload
